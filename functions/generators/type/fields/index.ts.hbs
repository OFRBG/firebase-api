// @format
import {pick} from 'lodash';
import {GraphQLString, GraphQLBoolean} from 'graphql';

import {retrieveType} from '../../../Types/registry';

{{#if depends}}
const /* OtherType */ = retrieveType(/* otherType */);
{{/if}}

/* Every item should have an ID */
const id = {
  type: GraphQLString,
  description: '{{ properCase name }} ID',
};

{{#if depends}}
/* These are the properties for dependent fields */
const dependency = {
  write : {
    type: /* graphql type */,
    description: /* Description of this dependency */,
  },
  read: /* OtherType */.resolvers.getter,
};
{{/if}}

/* These are the properties that may be written */
export const writable = {
  {{#if depends}}dependency: dependency.write,{{/if}}
};

/* These are the properties that may be read */
export const readable = {
  id,
  {{#if depends}}dependency: dependency.read,{{/if}}
};

/* These are the properties that may be used as queries
* e.g. {{ collectionName name }}(id: 4242)
 */
export const args = pick(readable, []);
